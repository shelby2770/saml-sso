"""
Django settings for SAML_DJNAGO project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-cky2^v_3m!!uh@qievlmi**-af1%sy+i_8%0z^2nxpuwf5h#l+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Trust origins for CSRF (needed for SAML logout responses from Keycloak)
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8080',
    'http://127.0.0.1:8001',
    'http://127.0.0.1:8002'
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_saml_Auth',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db_sp2.sqlite3',
    }
}

SAML_SETTINGS = {
  "strict": False, # Set to False for debugging
  "debug": True,
  "sp": {
    "entityId": "http://127.0.0.1:8002/api/saml/metadata/",
    "assertionConsumerService": {
      "url": "http://127.0.0.1:8002/api/saml/callback/",
      "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"   
    },
    "singleLogoutService": {
      "url": "http://127.0.0.1:8002/api/saml/sls/",
      "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
    },
    "NameIDFormat": "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
    "x509cert": "",
    "privateKey": "",
    "attributeConsumingService": {
      "serviceName": "Django SAML App",
      "serviceDescription": "Django SAML Application",
      "requestedAttributes": [
        {
          "name": "email",
          "isRequired": False,
          "nameFormat": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
          "friendlyName": "Email"
        },
        {
          "name": "given_name",
          "isRequired": False,
          "nameFormat": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
          "friendlyName": "First Name"
        },
        {
          "name": "family_name",
          "isRequired": False,
          "nameFormat": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
          "friendlyName": "Last Name"
        }
      ]
    }
  },
  "idp": {
    "entityId": "http://localhost:8080/realms/demo",
    "singleSignOnService": {
      "url": "http://localhost:8080/realms/demo/protocol/saml",
      "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
    },
    "singleLogoutService": {
      "url": "http://localhost:8080/realms/demo/protocol/saml",
      "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
    },
    # Keycloak realm certificate
    "x509cert": "MIIClzCCAX8CBgGZMmBbxjANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDARkZW1vMB4XDTI1MDkxMDA2NDQ1OVoXDTM1MDkxMDA2NDYzOVowDzENMAsGA1UEAwwEZGVtbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALuZHMHB6yK+U3zoCoIJxi9VizurGQLGhKTukUkkY9MXPK8Q3fBufUy8mnDprCElQYadI/aEf7zJo4ufao98EL2NH15XM9BtXCdMxSuXCFjOJh16NFmmGHeYaqtGXXwTRsLFmvklmpL75dq7/zMp6K2JSg7flvYIF3vVYZB+JKNNZbGPYDOwz9xSLNn41FzD0dG8qrMJpTZ9mC+quh6hVn0ay3mILpUnOtJw83X6BDlGK2W/Id012TDdv3vuLaBGCTGuHyH6RRNhRsqJAZtyxg8mEAX54bNdQCveMODI7jfmRpUC0IfgINqCuO9gger3DtUIyBO9/5F+XUBGzhzA4c8CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAWXo7A6Hjae3JStARVJmf4h6zRHrChtOLfgJQRbM4thljOHly07puj1fV2dqOX0KY8jO4tXxcNg6YirMbhnPG+bWx5FMK9mRTu5B8Hgyt5CeHlBTm9Bv2QESy8Yp8HMHsfcDgLSBFNKqlgQJEGRRQYLBCgB9BYswGPy/wzPggaP3z3Ma23Rnfp7AiGdJxspOIVbUil3XNVbWJuq7do/Kk+PIrRP8E7aARjJHGUlbjLMy517Y93Rs+iCwyGXTfIp0oB2lIPQ++MrmVsXeiQdg5h9fEg6yjsiAuUIVL0BnbcTO1CZXtOFp56wSd5jT1E/XStpCkDci7Lt/S7mcNhLSJaA=="
  },
  "security": {
    "nameIdEncrypted": False,
    "authnRequestsSigned": False,
    "logoutRequestSigned": False,
    "logoutResponseSigned": False,
    "signMetadata": False,
    "wantAssertionsSigned": False,
    "wantAssertionsEncrypted": False,
    "wantNameId": True,
    "wantNameIdEncrypted": False,
    "requestedAuthnContext": True,
    "requestedAuthnContextComparison": "exact",
    "wantXMLValidation": False,
    "relaxDestinationValidation": True,
    "signatureAlgorithm": "http://www.w3.org/2000/09/xmldsig#rsa-sha1",
    "digestAlgorithm": "http://www.w3.org/2000/09/xmldsig#sha1"
  }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
