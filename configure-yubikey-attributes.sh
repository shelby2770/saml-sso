#!/bin/bash

# 🔐 YubiKey + Custom Attributes - Keycloak Configuration Script
# This script provides step-by-step manual configuration instructions

echo "╔══════════════════════════════════════════════════════════════════════════════╗"
echo "║         🔐 YubiKey + Custom Attributes Configuration Guide                  ║"
echo "╚══════════════════════════════════════════════════════════════════════════════╝"
echo ""
echo "This guide will help you configure:"
echo "  ✓ Custom user attributes (age, mobile, address, profession)"
echo "  ✓ YubiKey WebAuthn authentication"
echo "  ✓ SAML attribute mappers for both SPs"
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""

# Check if Keycloak is running
if ! docker ps | grep -q keycloak-sso; then
    echo "❌ Keycloak is not running!"
    echo "   Start it with: bash start-keycloak.sh"
    exit 1
fi

echo "✅ Keycloak is running"
echo ""

echo "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓"
echo "┃                    PART 1: Custom User Attributes                           ┃"
echo "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛"
echo ""
echo "1. Open: http://localhost:8080"
echo "2. Login: admin / admin"
echo "3. Select 'demo' realm (top-left dropdown)"
echo "4. Click 'Realm settings' → 'User profile' tab"
echo "5. Add these 4 custom attributes:"
echo ""
echo "   ┌─────────────────────────────────────────────────────────────┐"
echo "   │ Attribute 1: age                                            │"
echo "   │   • Display name: Age                                       │"
echo "   │   • Required: Yes                                           │"
echo "   │   • User can edit: ✓                                        │"
echo "   │   • Validator: integer (optional)                           │"
echo "   └─────────────────────────────────────────────────────────────┘"
echo ""
echo "   ┌─────────────────────────────────────────────────────────────┐"
echo "   │ Attribute 2: mobile                                         │"
echo "   │   • Display name: Mobile Number                             │"
echo "   │   • Required: Yes                                           │"
echo "   │   • User can edit: ✓                                        │"
echo "   │   • Validator: length (min:10, max:15) (optional)           │"
echo "   └─────────────────────────────────────────────────────────────┘"
echo ""
echo "   ┌─────────────────────────────────────────────────────────────┐"
echo "   │ Attribute 3: address                                        │"
echo "   │   • Display name: Address                                   │"
echo "   │   • Required: No                                            │"
echo "   │   • User can edit: ✓                                        │"
echo "   └─────────────────────────────────────────────────────────────┘"
echo ""
echo "   ┌─────────────────────────────────────────────────────────────┐"
echo "   │ Attribute 4: profession                                     │"
echo "   │   • Display name: Profession                                │"
echo "   │   • Required: No                                            │"
echo "   │   • User can edit: ✓                                        │"
echo "   └─────────────────────────────────────────────────────────────┘"
echo ""
read -p "Press Enter when you've added all 4 attributes..."
echo ""

echo "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓"
echo "┃                   PART 2: YubiKey WebAuthn Setup                            ┃"
echo "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛"
echo ""
echo "Step 2.1: Enable WebAuthn Required Actions"
echo "  1. Click 'Authentication' (left sidebar)"
echo "  2. Click 'Required actions' tab"
echo "  3. Find 'Webauthn Register Passwordless' → Enable it"
echo "  4. Find 'Webauthn Register' → Enable it"
echo ""
read -p "Press Enter when done..."
echo ""

echo "Step 2.2: Create WebAuthn Authentication Flow"
echo "  1. Click 'Flows' tab"
echo "  2. Click 'Create flow'"
echo "  3. Name: YubiKey Browser Flow"
echo "  4. Flow type: Basic flow → Create"
echo ""
echo "  5. Add steps to the flow:"
echo "     a) Add step: Cookie"
echo "     b) Add step: WebAuthn Passwordless Authenticator"
echo "        - Set to: ALTERNATIVE"
echo "     c) Add sub-flow: 'Forms' (Basic flow)"
echo "        - In Forms sub-flow:"
echo "          • Add step: Username Password Form → REQUIRED"
echo "          • Add step: WebAuthn Authenticator → REQUIRED"
echo ""
read -p "Press Enter when flow is created..."
echo ""

echo "Step 2.3: Bind the Flow"
echo "  1. In 'Flows' tab, find 'Browser flow' dropdown at top"
echo "  2. Action → Bind flow"
echo "  3. Select 'Browser flow'"
echo "  4. Click Save"
echo ""
read -p "Press Enter when bound..."
echo ""

echo "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓"
echo "┃                  PART 3: SAML Attribute Mappers (SP1)                       ┃"
echo "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛"
echo ""
echo "1. Click 'Clients' → 'saml-sp-1'"
echo "2. Click 'Client scopes' tab"
echo "3. Click 'saml-sp-1-dedicated' scope"
echo "4. Click 'Add mapper' → 'By configuration'"
echo ""
echo "Add these 6 mappers:"
echo ""
echo "   Mapper 1: Username"
echo "     • Type: User Property"
echo "     • Name: username-mapper"
echo "     • Property: username"
echo "     • SAML Attribute Name: username"
echo "     • SAML Attribute NameFormat: Basic"
echo ""
echo "   Mapper 2: Email"
echo "     • Type: User Property"
echo "     • Name: email-mapper"
echo "     • Property: email"
echo "     • SAML Attribute Name: email"
echo "     • SAML Attribute NameFormat: Basic"
echo ""
echo "   Mapper 3: Age"
echo "     • Type: User Attribute"
echo "     • Name: age-mapper"
echo "     • User Attribute: age"
echo "     • SAML Attribute Name: age"
echo "     • SAML Attribute NameFormat: Basic"
echo ""
echo "   Mapper 4: Mobile"
echo "     • Type: User Attribute"
echo "     • Name: mobile-mapper"
echo "     • User Attribute: mobile"
echo "     • SAML Attribute Name: mobile"
echo "     • SAML Attribute NameFormat: Basic"
echo ""
echo "   Mapper 5: Address"
echo "     • Type: User Attribute"
echo "     • Name: address-mapper"
echo "     • User Attribute: address"
echo "     • SAML Attribute Name: address"
echo "     • SAML Attribute NameFormat: Basic"
echo ""
echo "   Mapper 6: Profession"
echo "     • Type: User Attribute"
echo "     • Name: profession-mapper"
echo "     • User Attribute: profession"
echo "     • SAML Attribute Name: profession"
echo "     • SAML Attribute NameFormat: Basic"
echo ""
read -p "Press Enter when all 6 mappers are added for SP1..."
echo ""

echo "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓"
echo "┃                  PART 4: SAML Attribute Mappers (SP2)                       ┃"
echo "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛"
echo ""
echo "Repeat the EXACT same 6 mappers for SP2:"
echo ""
echo "1. Click 'Clients' → 'saml-sp-2'"
echo "2. Click 'Client scopes' tab"
echo "3. Click 'saml-sp-2-dedicated' scope"
echo "4. Add the same 6 mappers (username, email, age, mobile, address, profession)"
echo ""
read -p "Press Enter when all 6 mappers are added for SP2..."
echo ""

echo "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓"
echo "┃                     PART 5: Update Test User                                ┃"
echo "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛"
echo ""
echo "1. Click 'Users' → Find 'testuser'"
echo "2. Click 'Attributes' tab"
echo "3. Add these attributes:"
echo ""
echo "   • age: 30"
echo "   • mobile: +1-555-0100"
echo "   • address: 123 Main Street, New York, NY 10001"
echo "   • profession: Software Developer"
echo ""
echo "4. Click 'Save'"
echo ""
read -p "Press Enter when user attributes are saved..."
echo ""

echo "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓"
echo "┃                    PART 6: Register YubiKey                                 ┃"
echo "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛"
echo ""
echo "Option A: User Self-Registration (Recommended)"
echo "  1. Logout from admin console"
echo "  2. Open: http://localhost:8080/realms/demo/account"
echo "  3. Login: testuser / password123"
echo "  4. Click 'Account security' → 'Signing in'"
echo "  5. Find 'Passwordless' section"
echo "  6. Click 'Set up Security Key'"
echo "  7. Insert YubiKey and touch when LED blinks"
echo "  8. Give it a name (e.g., 'My YubiKey')"
echo "  9. Click 'Save'"
echo ""
echo "Option B: Skip for now (test without YubiKey first)"
echo "  You can still test SAML attribute mapping without YubiKey"
echo ""
read -p "Press Enter when YubiKey is registered (or skipping)..."
echo ""

echo "╔══════════════════════════════════════════════════════════════════════════════╗"
echo "║                        ✅ Configuration Complete!                            ║"
echo "╚══════════════════════════════════════════════════════════════════════════════╝"
echo ""
echo "🎯 Next Steps:"
echo ""
echo "1. Restart Django service providers:"
echo "   kill \$(ps aux | grep 'runserver.*8001' | awk '{print \$2}')"
echo "   kill \$(ps aux | grep 'runserver.*8002' | awk '{print \$2}')"
echo "   nohup ./venv/bin/python manage.py runserver 127.0.0.1:8001 > sp1.log 2>&1 &"
echo "   cd SAML_DJNAGO_2"
echo "   nohup ../venv/bin/python manage.py runserver 127.0.0.1:8002 > sp2.log 2>&1 &"
echo ""
echo "2. Test the flow:"
echo "   • Open: http://127.0.0.1:8001/saml/login/"
echo "   • Login with: testuser / password123"
echo "   • (Optional) Touch YubiKey when prompted"
echo "   • Verify attributes displayed on success page!"
echo ""
echo "3. View server logs to see attribute output:"
echo "   tail -f sp1.log"
echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "📚 Documentation: YUBIKEY_CUSTOM_ATTRIBUTES_GUIDE.md"
echo ""
